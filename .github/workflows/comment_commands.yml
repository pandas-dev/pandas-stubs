name: Comment Commands to Trigger CI
on:
  issue_comment:
    types: created

permissions:
  checks: write

env:
  RUN_COMMAND: '{"/pandas_nightly": "pytest --nightly", "/pyright_strict": "pyright_strict", "/mypy_nightly": "mypy --mypy_nightly"}'
  DISPLAY_COMMAND: '{"/pandas_nightly": "Pandas nightly tests", "/pyright_strict": "Pyright strict tests", "/mypy_nightly": "Mypy nightly tests"}'

jobs:
  optional_tests:
    name: "Optional tests run"
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: (github.event.issue.pull_request) && contains(fromJSON('["/pandas_nightly", "/pyright_strict", "/mypy_nightly"]'), github.event.comment.body)

    steps:
      - uses: actions/checkout@v4

      - name: Install project dependencies
        uses: ./.github/setup
        with:
          os: ubuntu-latest
          python-version: "3.11"

      - name: Run ${{ fromJSON(env.DISPLAY_COMMAND)[github.event.comment.body] }}
        id: tests-step
        run: poetry run poe ${{ fromJSON(env.RUN_COMMAND)[github.event.comment.body] }}

      - name: Get head sha and store value
        if: always()
        id: get-sha
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: ${{ github.event.issue.number }}
            })
            core.setOutput('sha', pr.data.head.sha)

      - name: Report results of the tests and publish
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.checks.create({
              name: '${{ fromJSON(env.DISPLAY_COMMAND)[github.event.comment.body] }}',
              head_sha: '${{ steps.get-sha.outputs.sha }}',
              status: 'completed',
              conclusion: '${{ steps.tests-step.outcome }}',
              output: {
                title: 'Run ${{ fromJSON(env.DISPLAY_COMMAND)[github.event.comment.body] }}',
                summary: 'Results: ${{ steps.tests-step.outcome }}',
                text: 'See the actions run at ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}',
              },
              owner: context.repo.owner,
              repo: context.repo.repo
            })
