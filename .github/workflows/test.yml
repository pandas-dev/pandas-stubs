name: 'Test'

on:
  [push, pull_request, workflow_dispatch]
jobs:
  test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10']

    defaults:
      run:
        shell: bash

    steps:

    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
  
    - name: Load cached venv
      id: cached-pip-wheels
      uses: actions/cache@v2
      with:
        path: ~/.cache
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install project dependencies
      run: poetry install -vvv --no-root

    - name: Run mypy on 'tests' (using the local stubs) and on the local stubs
      run: |
        source $VENV
        poetry run poe mypy

    - name: Run pyright on 'tests' (using the local stubs) and on the local stubs
      run: |
        source $VENV
        poetry run poe pyright

    - name: Run pytest
      run: |
        source $VENV
        poetry run poe pytest

    - if: matrix.python-version == '3.8' && matrix.os == 'ubuntu-latest'
      uses: pre-commit/action@v3.0.0

    - name: Install pandas-stubs and run tests on the installed stubs
      run: |
        source $VENV
        poetry build -f wheel
        python -m pip install --find-links=./dist --force-reinstall pandas-stubs
        mv pandas-stubs _pandas-stubs
        mypy tests --no-incremental
        pyright tests
        mv _pandas-stubs pandas-stubs


