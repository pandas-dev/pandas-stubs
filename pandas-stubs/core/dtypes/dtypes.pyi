import datetime as dt
from typing import Any

from pandas.core.indexes.base import Index
from pandas.core.series import Series

from pandas._libs.tslibs import BaseOffset
from pandas._typing import (
    Ordered,
    npt,
)

from .base import ExtensionDtype

_str = str

def register_extension_dtype(cls: type[ExtensionDtype]) -> type[ExtensionDtype]: ...

class PandasExtensionDtype(ExtensionDtype):
    subdtype = ...
    str: _str | None = ...
    num: int = ...
    shape: tuple[int, ...] = ...
    itemsize: int = ...
    base = ...
    isbuiltin: int = ...
    isnative: int = ...
    def __hash__(self) -> int: ...
    @classmethod
    def reset_cache(cls) -> None: ...

class CategoricalDtype(PandasExtensionDtype, ExtensionDtype):
    def __init__(
        self,
        categories: Series | Index | list[Any] | None = ...,
        ordered: Ordered = ...,
    ) -> None: ...
    def __hash__(self) -> int: ...
    def __eq__(self, other) -> bool: ...
    @property
    def categories(self) -> Index: ...
    @property
    def ordered(self) -> Ordered: ...

class DatetimeTZDtype(PandasExtensionDtype):
    def __init__(
        self, unit: _str = ..., tz: str | int | dt.tzinfo | None = ...
    ) -> None: ...
    @property
    def unit(self): ...
    @property
    def tz(self): ...
    @property
    def name(self) -> _str: ...
    def __hash__(self) -> int: ...
    def __eq__(self, other) -> bool: ...

class PeriodDtype(PandasExtensionDtype):
    def __new__(cls, freq: str | BaseOffset = ...): ...
    def __hash__(self) -> int: ...
    def __eq__(self, other) -> bool: ...
    @property
    def freq(self): ...
    @property
    def name(self) -> _str: ...
    @property
    def na_value(self): ...
    def __from_arrow__(self, array): ...

class IntervalDtype(PandasExtensionDtype):
    def __new__(cls, subtype: str | npt.Dtype | None = ...): ...
    def __hash__(self) -> int: ...
    def __eq__(self, other) -> bool: ...
    @property
    def subtype(self): ...
    @property
    def type(self): ...
    def __from_arrow__(self, array): ...
